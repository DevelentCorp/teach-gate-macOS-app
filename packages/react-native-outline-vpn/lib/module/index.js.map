{"version":3,"names":["NativeModules","Platform","LINKING_ERROR","select","ios","macos","default","OutlineVpn","Proxy","get","Error","startVpn","data","host","port","password","method","prefix","providerBundleIdentifier","serverAddress","tunnelId","localizedDescription","Promise","resolve","reject","OS","x","e","saveCredential","then","credentialResult","getCredential","prepareLocalVPN","connectLocalVPN","catch","getVpnConnectionStatus","error","isConnected","stopVpn","disconnectVpn","successResult","errorResult","result","options","getVpnStatus"],"sources":["index.tsx"],"sourcesContent":["import {NativeModules, Platform} from 'react-native';\nimport {type startVPN, type vpnOptions} from './types';\n\nconst LINKING_ERROR =\n  `The package 'react-native-outline-vpn' doesn't seem to be linked. Make sure: \\n\\n` +\n  Platform.select({\n    ios: \"- You have run 'pod install'\\n\",\n    macos: \"- You have run 'pod install'\\n\",\n    default: '',\n  }) +\n  '- You rebuilt the app after installing the package\\n' +\n  '- You are not using Expo Go\\n';\n\nconst OutlineVpn = NativeModules.OutlineVpn\n  ? NativeModules.OutlineVpn\n  : new Proxy(\n      {},\n      {\n        get() {\n          throw new Error(LINKING_ERROR);\n        },\n      },\n    );\n\nconst startVpn: startVPN = (data: vpnOptions) => {\n  const {\n    host,\n    port,\n    password,\n    method,\n    prefix,\n    providerBundleIdentifier,\n    serverAddress,\n    tunnelId,\n    localizedDescription,\n  } = data;\n  return new Promise(async (resolve, reject) => {\n    if (Platform.OS === 'ios' || Platform.OS === 'macos') {\n      await OutlineVpn.startVpn(\n        host,\n        port,\n        password,\n        method,\n        prefix,\n        providerBundleIdentifier,\n        serverAddress,\n        tunnelId,\n        localizedDescription,\n        (x: string) => {\n          resolve(x);\n        },\n        (e: string) => {\n          reject(e);\n        },\n      );\n    } else {\n      // Android implementation\n      OutlineVpn.saveCredential(host, port, password, method, prefix).then(\n        (credentialResult: any) => {\n          if (credentialResult) {\n            OutlineVpn.getCredential().then(() => {\n              OutlineVpn.prepareLocalVPN().then(() => {\n                OutlineVpn.connectLocalVPN()\n                  .then(() => resolve(true))\n                  .catch((e: any) => reject(e));\n              });\n            });\n          }\n        },\n      );\n    }\n  });\n};\n\nconst getVpnConnectionStatus = (): Promise<boolean> => {\n  return new Promise((resolve, reject) => {\n    if (Platform.OS === 'ios' || Platform.OS === 'macos') {\n      OutlineVpn.getVpnConnectionStatus((error: any, isConnected: boolean) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(isConnected);\n        }\n      });\n    } else {\n      // For Android or other platforms, you can return false or implement accordingly\n      resolve(false);\n    }\n  });\n};\n\nconst stopVpn = (): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    if (Platform.OS === 'ios' || Platform.OS === 'macos') {\n      OutlineVpn.disconnectVpn(\n        null,\n        (successResult: any[]) => {\n          resolve(successResult[0]);\n        },\n        (errorResult: any[]) => {\n          reject(new Error(errorResult[0]));\n        },\n      );\n    } else {\n      // Android implementation\n      OutlineVpn.disconnectVpn()\n        .then((result: string) => resolve(result))\n        .catch((error: any) => reject(error));\n    }\n  });\n};\n\nexport default {\n  startVpn(options: vpnOptions): Promise<Boolean | String> {\n    return startVpn(options);\n  },\n  stopVpn(): Promise<string> {\n    return stopVpn();\n  },\n  getVpnStatus(): Promise<boolean> {\n    return getVpnConnectionStatus();\n  },\n};\n"],"mappings":"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","ignoreList":[]}